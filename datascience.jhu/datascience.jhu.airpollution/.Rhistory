x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[is.na(x) & x > 0]
x[!is.na(x) & x > 0]
c(x[3],x[5],x[7])
x[c(3,5,7)]
x[0]
x[2999]
x[3000]
play()
x[!c(2)]
x[c(2)]
x[1]
x[c(1)]
x[2]
x[!c(2,3,4)]
nxt()
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vvct)
names(vect)
vect <- c(11,2,NA)
vect2 <- c(11,2,NA)
play()
vect
vect2
nxt()
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
play()
vect2["bar"]
vect
names(vect)
names(vect)
nxt()
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
play()
my_vector
class(my_vector)
class(my_vector)
nxt()
?matrix
my_matrix <- matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating."test"")
cnames <- c("patient","age","weight","bp","rating."test"")
cnames <- c("patient","age","weight","bp","rating."test")
cnames <- c("patient","age","weight","bp","rating."test")
cnames <- c("patient","age","weight","bp","rating,"test")
cnames <- c("patient","age","weight","hp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
play()
my_data
colnames(my_data) <- cnames
my_data
nxt()
colnames(my_data) <- cnames
my_data
library(swirl)
1
swirl()
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
exit()
q!
q()
for (i in 1:10) print 1
for (i in 1:10)
print(i)
ls()
my_matrix
for (i in LETTERS) { print(i) }
class(LETTERS)
seq_along(LETTERS)
nrow(my_matrix)
seq_len(4)
for (i in colnames(my_matrix)) print(i)
colnames(my_matrix)
my_matrix2
ls()
colnames(mmy_data)
colnames(my_data)
for (i in colnames(my_data)) print(i)
x <- function(a) { print(a) }
x
x("hello")
x(1)
add <- function(a,b) {
return a + b;
}
add <- function(a,b) {
return a + b;
}
add <- function(a,b) {
return a + b
}
add <- function(a,b) {
a + b
}
add(1,2)
ad10 <- function(v) {
v[v>10]
}
above10 <- function(v) {
v[v>10]
}
ls()
ad10 <- NULL
ls()
ad10
ad10 <- nothing
remove(ad10)
ls()
above10(c(1:20))
1:20 > 10
add2 <- function(x,y) {
x + y
}
above10 <- function(v) {
v[v>10]
}
above <- function(v,f = 10) {
v[v>f]
}
above(1:20)
above(1:20,3)
calcColMean <- function(m) {
a = vector(ncol(m))
for (i in 1:ncol(m)) {
for (j in 1:nrows(m)) {
a[i] <- a[i] + m[i,j]
}
a[i] <= a[i] / nrows(m)
}
a
}
ls()
my_matrix
calcColMean(my_matrix)
nrow(my_matrix)
calcColMean <- function(m) {
a = vector(ncol(m))
for (i in 1:ncol(m)) {
for (j in 1:nrow(m)) {
a[i] <- a[i] + m[i,j]
}
a[i] <= a[i] / nrows(m)
}
a
}
calcColMean(my_matrix)
vector(ncol(my_matrix))
ncol(my_matrix)
add2 <- function(x,y) {
x + y
}
above10 <- function(v) {
v[v>10]
}
above <- function(v,f = 10) {
v[v>f]
}
calcColMean <- function(m) {
a = vector(length = ncol(m))
for (i in 1:ncol(m)) {
for (j in 1:nrow(m)) {
a[i] <- a[i] + m[i,j]
}
a[i] <= a[i] / nrows(m)
}
a
}
calcColMean(my_matrix)
add2 <- function(x,y) {
x + y
}
above10 <- function(v) {
v[v>10]
}
above <- function(v,f = 10) {
v[v>f]
}
calcColMean <- function(m) {
a = vector(length = ncol(m))
for (i in 1:ncol(m)) {
for (j in 1:nrow(m)) {
a[i] <- a[i] + m[i,j]
}
a[i] <= a[i] / nrow(m)
}
a
}
calcColMean(my_matrix)
add2 <- function(x,y) {
x + y
}
above10 <- function(v) {
v[v>10]
}
above <- function(v,f = 10) {
v[v>f]
}
calcColMean <- function(m) {
a = vector(length = ncol(m))
for (j in 1:ncol(m)) {
for (i in 1:nrow(m)) {
a[j] <- a[i] + m[i,j]
}
a[j] <= a[j] / nrow(m)
}
a
}
calcColMean(my_matrix)
my_matrix
add2 <- function(x,y) {
x + y
}
above10 <- function(v) {
v[v>10]
}
above <- function(v,f = 10) {
v[v>f]
}
calcColMean <- function(m) {
a = vector(length = ncol(m))
for (j in 1:ncol(m)) {
for (i in 1:nrow(m)) {
a[j] <- a[j] + m[i,j]
}
a[j] <= a[j] / nrow(m)
}
a
}
calcColMean(my_matrix)
add2 <- function(x,y) {
x + y
}
above10 <- function(v) {
v[v>10]
}
above <- function(v,f = 10) {
v[v>f]
}
calcColMean <- function(m) {
a = vector(length = ncol(m))
for (j in 1:ncol(m)) {
for (i in 1:nrow(m)) {
a[j] <- a[j] + m[i,j]
}
a[j] <- a[j] / nrow(m)
}
a
}
calcColMean(my_matrix)
my_matrix
colMeans(my_matrix)
add2 <- function(x,y) {
x + y
}
above10 <- function(v) {
v[v>10]
}
above <- function(v,f = 10) {
v[v>f]
}
calcColMean <- function(m, removeNA) {
a = vector(length = ncol(m))
for (j in 1:ncol(m)) {
a[j] <- mean(y[,j], na.rm = removeNA)
}
a
}
colMeans(my_matrix)
ls()
save.image("D:/Jerry/Projects/.RData")
ls()
source("pollutantmean.r")
getwd()
setwd("D:\\Jerry\\Projects\\datascience.coursera\\projects.r\\air.pollution")
getwd()
ls()
source("pollutionmean.r")
source("pollutantmean.r")
source("complete.r")
source("corr.r")
ls()
complete("specdata", c(2,4,8,10,12))
corr("specdata", 150)
cr <- corr("specdata", 150)
head(cr)
df <- read.csv("specdata\001.csv")
df <- read.csv("specdata/001.csv")
head(df)
df <- complete.cases(df)
df
df <- read.csv("specdata/001.csv")
df
df[complete.cases(df)]
df[complete.cases(df),]
df <- df[complete.cases(df),]
head(df)
summary(cr)
ls()
rm(cr)
df
ls()
rm(df)
corr <- function(directory, threshold = 0) {
cv <- numeric()
for (fn in list.files(directory)) {
fn <- sprintf("%s/%s", directory, fn)
df <- read.csv(fn)
df <- df[complete.cases(df),]
if (nrow(df) > threshold) {
next
}
x <- df[,"nitrate"]
y <- df[,"sulfate"]
cv <- c(cv,cor(x,y))
}
cv
}
corr("specdata")
corr("specdata", 150)
ls()
corr("specdata", 400)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
df <- read.csv("specdata\001.csv")
df <- read.csv("specdata/001.csv")
cc <- df[complete.cases(df),]
head(Cc)
head(cc)
corr(cc["sulfate",], cc["nitrate",])
cor(cc["sulfate",], cc["nitrate",])
cc["sulfate",]
cc
cc["sulfate",]
cc[,"sulfate"]
cc[,"nitrate"]
cv <- cor(cc[,"sulfate"], cc[,"sulfate"])
cv
cv <- cor(cc[,"sulfate"], cc[,"nitrate"])
cv
cv <- cor(cc[,"nitrate"], cc[,"sulfate"])
cv
cv
cc
tail(cv)
tail(cc)
nrow(cc)
nrow(df)
corr <- function(directory, threshold = 0) {
cv <- numeric()
for (fn in list.files(directory)) {
fn <- sprintf("%s/%s", directory, fn)
df <- read.csv(fn)
cc <- df[complete.cases(df),]
if (nrow(cc) > threshold) {
next
}
x <- cc[,"nitrate"]
y <- cc[,"sulfate"]
cv <- c(cv,cor(x,y))
}
cv
}
corr("specdata", 150)
head(corr("specdata", 150))
ls()
rm(cc)
rm(cr)
rm(cv)
rm(df)
ls()
tcc <- corr("specdata", 150)
tcc
summary(tcc)
ls()
rm(tcc)
tdf <- read.csv("specdata/001.csv")
nrow(tdf)
tdf <- tdf[complete.cases(tdf),]
nrow(tdf)
tdf
ls()
tdf
tdf[,"nitrate"]
tdf[,"sulfate"]
corr <- function(directory, threshold = 0) {
cv <- numeric()
for (fn in list.files(directory)) {
fn <- sprintf("%s/%s", directory, fn)
df <- read.csv(fn)
cc <- df[complete.cases(df),]
if !(nrow(cc) > threshold) {
next
}
x <- cc[,"nitrate"]
y <- cc[,"sulfate"]
cv <- c(cv,cor(x,y))
}
cv
}
corr <- function(directory, threshold = 0) {
cv <- numeric()
for (fn in list.files(directory)) {
fn <- sprintf("%s/%s", directory, fn)
df <- read.csv(fn)
cc <- df[complete.cases(df),]
if (nrow(cc) < threshold) {
next
}
x <- cc[,"nitrate"]
y <- cc[,"sulfate"]
cv <- c(cv,cor(x,y))
}
cv
}
ls()
rm(tdf)
corr("specdata", 150)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
corr <- function(directory, threshold = 0) {
cv <- numeric()
for (fn in list.files(directory)) {
fn <- sprintf("%s/%s", directory, fn)
df <- read.csv(fn)
cc <- df[complete.cases(df),]
if (nrow(cc) <= threshold) {
next
}
x <- cc[,"nitrate"]
y <- cc[,"sulfate"]
cv <- c(cv,cor(x,y))
}
cv
}
ls()
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
summary("specdata")
cr <- corr("specdata")
summary(cr)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr),5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n,5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
ls()
